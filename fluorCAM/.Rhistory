"2" = "#A6CEE3",
"3" = "#1F78B4",
"0" = "#B2DF8A",
"1" = "#33A02C"
),
name = "",
labels = c(
"2" = "AT5G45470 E-",
"3" = "AT5G45470 E+",
"0" = "WT E-",
"1" = "WT E+"
)) +
geom_signif(comparisons = list(c("0", "2"), c("0", "1"), c("0","3"), c("1", "2"), c("1", "3")), map_signif_level = T, test="t.test", step_increase = 0.2) +
labs(x = "",
title = "NPQ_Lss w zależności od grupy roślin") +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", size = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
plot3
ggsave(filename = 'qy_max_pomiar2.png',plot = plot1, width = 12, height = 8)
ggsave(filename = 'qy_max_pomiar2.png',plot = plot2, width = 12, height = 8)
ggsave(filename = 'npq_lss_pomiar2.png',plot = plot3, width = 12, height = 8)
library(tidyverse)
library(broom)
library(dplyr)
library(reshape)
library(ggsignif)
data_all <- read.csv('/home/konsternacja/Git/master-thesis1/fluorCAM/measurement1/concatenated_file.tsv', sep = '\t')
colnames(data_all)
# data_all <- data_all %>%
#  mutate(across(c(1:104), ~ ./Size..pixels.))
# data_all <- data.frame(data_all)
# data_all
data_all <- data_all %>%
mutate(across(c(1), as.factor))
data_all
data_all <- data_all[, -which(names(data_all) == "Size..pixels.")]
data_all
res <- aov(groups ~ ., data=data_all)
significant_columns <- summary(res)[[1]] %>%
filter(`Pr(>F)` <= 0.05) %>%
rownames %>%
trimws
significant_columns
# Kolumna z grupami
data_all$groups <- as.factor(data_all$groups)
groups <- data_all$groups
significant_columns <- list()
# Pętla do analizy wariancji dla każdej kolumny
for (column_name in colnames(data_all)) {
if (column_name != "groups") {  # Pomijamy kolumnę z grupami
# Tworzymy formułę ANOVA
formula <- as.formula(paste(column_name, "~ groups"))
# Przeprowadzamy ANOVA
anova_result <- aov(formula, data = data_all)
# Wyświetlamy wyniki
# print(paste("Analiza wariancji dla", column_name))
# print(summary(anova_result))
df_anova <- data.frame(summary(anova_result)[[1]])
p_value_anova <- df_anova$Pr..F.[1]
# Przeprowadzamy test Tukeya
tukey_result <- TukeyHSD(anova_result)
# Jeśli p-value jest mniejsze niż 0.01, dodaj nazwę kolumny do significant_columns
if (p_value_anova < 0.05) {
significant_columns[[length(significant_columns) + 1]] <- column_name
print(paste("Test Tukeya dla", column_name))
print(tukey_result)
}
}
}
significant_cols <- trimws(significant_columns)
significant_cols
plot1 <- data_all %>% ggplot(aes(x=groups, y=Rfd_Lss, fill=groups)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(
values = c(
"2" = "#A6CEE3",
"3" = "#1F78B4",
"0" = "#B2DF8A",
"1" = "#33A02C"
),
name = "",
labels = c(
"2" = "AT5G45470 E-",
"3" = "AT5G45470 E+",
"0" = "WT E-",
"1" = "WT E+"
)) +
geom_signif(comparisons = list(c("0", "2"), c("0", "3"), c("3","1")), map_signif_level = T, test="t.test", step_increase = 0.2) +
labs(x = "",
title = "Rfd_Lss w zależności od grupy roślin") +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
plot1
plot2 <- data_all %>% ggplot(aes(x=groups, y=QY_max, fill=groups)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(
values = c(
"2" = "#A6CEE3",
"3" = "#1F78B4",
"0" = "#B2DF8A",
"1" = "#33A02C"
),
name = "",
labels = c(
"2" = "AT5G45470 E-",
"3" = "AT5G45470 E+",
"0" = "WT E-",
"1" = "WT E+"
)) +
geom_signif(comparisons = list(c("0", "1"), c("0", "2")), map_signif_level = T, test="t.test", step_increase = 0.2) +
labs(x = "",
title = "QY_max w zależności od grupy roślin") +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", size = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
plot2
plot3 <- data_all %>% ggplot(aes(x=groups, y=NPQ_Lss, fill=groups)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(
values = c(
"2" = "#A6CEE3",
"3" = "#1F78B4",
"0" = "#B2DF8A",
"1" = "#33A02C"
),
name = "",
labels = c(
"2" = "AT5G45470 E-",
"3" = "AT5G45470 E+",
"0" = "WT E-",
"1" = "WT E+"
)) +
geom_signif(comparisons = list(c("0", "2"), c("0", "3"), c("3","1")), map_signif_level = T, test="t.test", step_increase = 0.2) +
labs(x = "",
title = "NPQ_Lss w zależności od grupy roślin") +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", size = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
plot3
ggsave(filename = 'rfd_lss_pomiar1.png',plot = plot1, width = 12, height = 8)
ggsave(filename = 'qy_max_pomiar1.png',plot = plot2, width = 12, height = 8)
ggsave(filename = 'npq_lss_pomiar1.png',plot = plot3, width = 12, height = 8)
library(tidyverse)
library(broom)
library(dplyr)
library(reshape)
library(ggsignif)
data_all <- read.csv('/home/konsternacja/Git/master-thesis1/fluorCAM/measurement2/concatenated_file.tsv', sep = '\t')
colnames(data_all)
# data_all <- data_all %>%
#  mutate(across(c(1:104), ~ ./Size..pixels.))
# data_all <- data.frame(data_all)
# data_all
data_all <- data_all %>%
mutate(across(c(1), as.factor))
data_all
data_all <- data_all[, -which(names(data_all) == "Size..pixels.")]
data_all
res <- aov(groups ~ ., data=data_all)
significant_columns <- summary(res)[[1]] %>%
filter(`Pr(>F)` <= 0.05) %>%
rownames %>%
trimws
significant_columns
# Kolumna z grupami
data_all$groups <- as.factor(data_all$groups)
groups <- data_all$groups
significant_columns <- list()
# Pętla do analizy wariancji dla każdej kolumny
for (column_name in colnames(data_all)) {
if (column_name != "groups") {  # Pomijamy kolumnę z grupami
# Tworzymy formułę ANOVA
formula <- as.formula(paste(column_name, "~ groups"))
# Przeprowadzamy ANOVA
anova_result <- aov(formula, data = data_all)
# Wyświetlamy wyniki
# print(paste("Analiza wariancji dla", column_name))
# print(summary(anova_result))
df_anova <- data.frame(summary(anova_result)[[1]])
p_value_anova <- df_anova$Pr..F.[1]
# Przeprowadzamy test Tukeya
tukey_result <- TukeyHSD(anova_result)
# Jeśli p-value jest mniejsze niż 0.01, dodaj nazwę kolumny do significant_columns
if (p_value_anova < 0.05) {
significant_columns[[length(significant_columns) + 1]] <- column_name
print(paste("Test Tukeya dla", column_name))
print(tukey_result)
}
}
}
significant_cols <- trimws(significant_columns)
significant_cols
plot1 <- data_all %>% ggplot(aes(x=groups, y=Rfd_Lss, fill=groups)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(
values = c(
"2" = "#A6CEE3",
"3" = "#1F78B4",
"0" = "#B2DF8A",
"1" = "#33A02C"
),
name = "",
labels = c(
"2" = "AT5G45470 E-",
"3" = "AT5G45470 E+",
"0" = "WT E-",
"1" = "WT E+"
)) +
geom_signif(comparisons = list(c("0", "2"), c("0", "3"), c("1", "2"), c("1", "3")), map_signif_level = T, test="t.test", step_increase = 0.2) +
labs(x = "",
title = "Rfd_Lss w zależności od grupy roślin") +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
plot1
plot2 <- data_all %>% ggplot(aes(x=groups, y=QY_max, fill=groups)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(
values = c(
"2" = "#A6CEE3",
"3" = "#1F78B4",
"0" = "#B2DF8A",
"1" = "#33A02C"
),
name = "",
labels = c(
"2" = "AT5G45470 E-",
"3" = "AT5G45470 E+",
"0" = "WT E-",
"1" = "WT E+"
)) +
geom_signif(comparisons = list(c("3", "1")), map_signif_level = T, test="t.test", step_increase = 0.2) +
labs(x = "",
title = "QY_max w zależności od grupy roślin") +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", size = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
plot2
plot3 <- data_all %>% ggplot(aes(x=groups, y=NPQ_Lss, fill=groups)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(
values = c(
"2" = "#A6CEE3",
"3" = "#1F78B4",
"0" = "#B2DF8A",
"1" = "#33A02C"
),
name = "",
labels = c(
"2" = "AT5G45470 E-",
"3" = "AT5G45470 E+",
"0" = "WT E-",
"1" = "WT E+"
)) +
geom_signif(comparisons = list(c("0", "2"), c("0", "1"), c("0","3"), c("1", "2"), c("1", "3")), map_signif_level = T, test="t.test", step_increase = 0.2) +
labs(x = "",
title = "NPQ_Lss w zależności od grupy roślin") +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", size = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
plot3
ggsave(filename = 'rfd_lss_pomiar2.png',plot = plot1, width = 12, height = 8)
ggsave(filename = 'qy_max_pomiar2.png',plot = plot2, width = 12, height = 8)
ggsave(filename = 'npq_lss_pomiar2.png',plot = plot3, width = 12, height = 8)
library(tidyverse)
library(broom)
library(dplyr)
library(reshape)
library(ggsignif)
data_all <- read.csv('/home/konsternacja/Git/master-thesis1/fluorCAM/measurement1/concatenated_file.tsv', sep = '\t')
colnames(data_all)
# Kolumna z grupami
data_all$plant <- as.factor(data_all$plant)
data_all$inoculation <- as.factor(data_all$inoculation)
plant <- data_all$plant
inoculation <- data_all$inoculation
significant_columns <- list()
# Pętla do analizy wariancji dla każdej kolumny
for (column_name in colnames(data_all)) {
if (column_name != "plant" & column_name != "inoculation") {  # Sprawdzamy kolumny inne niż 'plant' i 'inoculation'
# Tworzymy formułę ANOVA
formula <- as.formula(paste(column_name, "~ plant * inoculation"))
# Przeprowadzamy ANOVA
anova_result <- aov(formula, data = data_all)
# Wyświetlamy wyniki
# print(paste("Analiza wariancji dla", column_name))
# print(summary(anova_result))
df_anova <- data.frame(summary(anova_result)[[1]])
p_value_anova <- df_anova$Pr..F.[1]
# Przeprowadzamy test Tukeya
tukey_result <- TukeyHSD(anova_result)
# Jeśli p-value jest mniejsze niż 0.05, dodaj nazwę kolumny do significant_columns
if (p_value_anova < 0.05) {
significant_columns[[length(significant_columns) + 1]] <- column_name
print(paste("Test Tukeya dla", column_name))
print(tukey_result)
}
}
}
significant_cols <- trimws(significant_columns)
significant_cols
plot1 <- data_all %>%
ggplot(aes(x = plant, y = Rfd_Lss, fill = inoculation)) +
# geom_jitter() +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(values = c("#66CCCC", "#006666"), name = "") +
labs(x = "",
title = "Rfd_Lss w zależności od grupy roślin, pomiar 1") +
geom_signif(comparisons = list(c("AT5G45470","WT")),
map_signif_level = TRUE, test = "t.test", step_increase = 0.2) +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
)
print(plot1)
plot3 <- data_all %>% ggplot(aes(x=plant, y=NPQ_Lss, fill=inoculation)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(values = c("#66CCCC", "#006666"), name = "") +
labs(x = "",
title = "NPQ_Lss w zależności od grupy roślin, pomiar 1") +
geom_signif(comparisons = list(c("AT5G45470","WT")),
map_signif_level = TRUE, test = "t.test", step_increase = 0.2) +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
)
plot3
ggsave(filename = '/home/konsternacja/Git/master-thesis1/figures/plots/rfd_lss_pomiar1.png',plot = plot1, width = 12, height = 8)
ggsave(filename = '/home/konsternacja/Git/master-thesis1/figures/plots/npq_lss_pomiar1.png',plot = plot3, width = 12, height = 8)
library(tidyverse)
library(broom)
library(dplyr)
library(reshape)
library(ggsignif)
data_all <- read.csv('/home/konsternacja/Git/master-thesis1/fluorCAM/measurement3/concatenated_file.tsv', sep = '\t')
colnames(data_all)
# Kolumna z grupami
data_all$plant <- as.factor(data_all$plant)
data_all$inoculation <- as.factor(data_all$inoculation)
plant <- data_all$plant
inoculation <- data_all$inoculation
significant_columns <- list()
# Pętla do analizy wariancji dla każdej kolumny
for (column_name in colnames(data_all)) {
if (column_name != "plant" & column_name != "inoculation") {  # Sprawdzamy kolumny inne niż 'plant' i 'inoculation'
# Tworzymy formułę ANOVA
formula <- as.formula(paste(column_name, "~ plant * inoculation"))
# Przeprowadzamy ANOVA
anova_result <- aov(formula, data = data_all)
# Wyświetlamy wyniki
# print(paste("Analiza wariancji dla", column_name))
# print(summary(anova_result))
df_anova <- data.frame(summary(anova_result)[[1]])
p_value_anova <- df_anova$Pr..F.[1]
# Przeprowadzamy test Tukeya
tukey_result <- TukeyHSD(anova_result)
# Jeśli p-value jest mniejsze niż 0.05, dodaj nazwę kolumny do significant_columns
if (p_value_anova < 0.05) {
significant_columns[[length(significant_columns) + 1]] <- column_name
print(paste("Test Tukeya dla", column_name))
print(tukey_result)
}
}
}
significant_cols <- trimws(significant_columns)
significant_cols
plot1 <- data_all %>% ggplot(aes(x=plant, y=Rfd_Lss, fill=inoculation)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(values = c("#66CCCC", "#006666"), name = "") +
labs(x = "",
title = "Rfd_Lss w zależności od grupy roślin, pomiar 3") +
geom_signif(comparisons = list(c("AT5G45470","WT")),
map_signif_level = TRUE, test = "t.test", step_increase = 0.2) +
theme(legend.position = "top", text = element_text(size = 20)) +
scale_y_continuous(limits =c(0, 4.5)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
)
plot1
plot3 <- data_all %>% ggplot(aes(x=plant, y=NPQ_Lss, fill=inoculation)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(values = c("#66CCCC", "#006666"), name = "") +
labs(x = "",
title = "NPQ_Lss w zależności od grupy roślin, pomiar 3") +
geom_signif(comparisons = list(c("AT5G45470","WT")),
map_signif_level = TRUE, test = "t.test", step_increase = 0.2) +
scale_y_continuous(limits =c(0, 3)) +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
)
plot3
ggsave(filename = '/home/konsternacja/Git/master-thesis1/figures/plots/rfd_lss_pomiar3.png',plot = plot1, width = 12, height = 8)
ggsave(filename = '/home/konsternacja/Git/master-thesis1/figures/plots/npq_lss_pomiar3.png',plot = plot3, width = 12, height = 8)
plot_test_1 <- data_all %>%
mutate(x2 = as.integer(interaction(inoculation, plant))) %>%
ggplot(aes(x2, Rfd_Lss, group = x2, fill = inoculation)) +
scale_fill_manual(values = c("#66CCCC", "#006666"), name = "") +
geom_boxplot() +
labs(x = "",
title = "Rfd_Lss w zależności od grupy roślin, pomiar 3") +
geom_signif(comparisons = list(c(1, 3),
c(2, 4)),
y_position = rep(max(data_all$Rfd_Lss), 2) * c(1, 1.05),
map_signif_level = TRUE, test = "t.test", step_increase = 0.2) +
scale_y_continuous(limits =c(0, 6)) +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
) +
scale_x_continuous(breaks = c(1.5, 3.5), labels = c("AT5G45470", "WT"))
plot_test_2 <- data_all %>%
mutate(x2 = as.integer(interaction(inoculation, plant))) %>%
ggplot(aes(x2, Rfd_Lss, group = x2, fill = inoculation)) +
scale_fill_manual(values = c("#66CCCC", "#006666"), name = "") +
geom_boxplot() +
labs(x = "",
title = "Rfd_Lss w zależności od grupy roślin, pomiar 3") +
geom_signif(comparisons = list(c(1, 2),
c(3, 4),
c(1, 3),
c(2, 4)),
map_signif_level = TRUE, test = "t.test", step_increase = 0.2) +
scale_y_continuous(limits =c(0, 6.5)) +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
) +
scale_x_continuous(breaks = c(1.5, 3.5), labels = c("AT5G45470", "WT"))
plot_test_3 <- data_all %>% ggplot(aes(x=plant, y=Rfd_Lss, fill=inoculation)) +
geom_boxplot(outlier.size = 0.5, outlier.colour = "red") +
scale_fill_manual(values = c("#66CCCC", "#006666"), name = "") +
labs(x = "",
title = "Rfd_Lss w zależności od grupy roślin, pomiar 3") +
geom_signif(comparisons = list(c("AT5G45470","WT")),
map_signif_level = TRUE, test = "t.test", step_increase = 0.2) +
scale_y_continuous(limits =c(0, 4.5)) +
theme(legend.position = "top", text = element_text(size = 20)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
panel.background = element_rect(fill = "white"),  # Białe tło
panel.grid.major = element_line(color = "lightgray", linewidth = 0.5), # Szare linie siatki
panel.grid.minor = element_blank(),  # Wyłącz linie siatki pomocniczej
)
ggsave('/home/konsternacja/Git/master-thesis1/figures/plots_to_choose/plot1.png', plot = plot_test_1, width = 12, height = 8)
ggsave('/home/konsternacja/Git/master-thesis1/figures/plots_to_choose/plot2.png', plot = plot_test_2, width = 12, height = 8)
ggsave('/home/konsternacja/Git/master-thesis1/figures/plots_to_choose/plot3.png', plot = plot_test_3, width = 12, height = 8)
ggsave('/home/konsternacja/Git/master-thesis1/figures/plots_to_choose/plot1.png', plot = plot_test_1, width = 12, height = 8)
ggsave('/home/konsternacja/Git/master-thesis1/figures/plots_to_choose/plot2.png', plot = plot_test_2, width = 12, height = 8)
ggsave('/home/konsternacja/Git/master-thesis1/figures/plots_to_choose/plot3.png', plot = plot_test_3, width = 12, height = 8)
